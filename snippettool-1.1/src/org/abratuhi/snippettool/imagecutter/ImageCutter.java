package org.abratuhi.snippettool.imagecutter;import java.awt.Dimension;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import javax.swing.JButton;import javax.swing.JFrame;import javax.swing.JPanel;import javax.swing.JTextField;import javax.swing.SpringLayout;import org.abratuhi.snippettool.gui._frame_SnippetTool;import org.abratuhi.snippettool.gui._panel_Explorer;import org.abratuhi.snippettool.util.SpringUtilities;/** * Snippet-Tool image-cutter component. * Used to cut images due to coordinates (inscript appearances), stored in database. * Automatically saves snippets to /tmp/img * Can also be used to automatically store snippets in database (uncomment line 80). *  * @author Alexei Bratuhin  * */@SuppressWarnings("serial")public class ImageCutter extends JFrame implements ActionListener{		/** as reference **/	_frame_SnippetTool root;		_panel_Explorer explorer;		/** Enter here Id of inscript to use**/	JTextField id = new JTextField();		JButton ok = new JButton("OK");	JButton cancel = new JButton("Cancel");		public ImageCutter(_frame_SnippetTool r){		super("Image Cutter");		this.root = r;				explorer = new _panel_Explorer(this.root, false);				JPanel buttons = new JPanel(new SpringLayout());		buttons.add(ok);		buttons.add(cancel);		ok.addActionListener(this);		cancel.addActionListener(this);		SpringUtilities.makeCompactGrid(buttons, 1, 2, 0, 0, 0, 0);				this.setLocation(100, 100);		this.setPreferredSize(new Dimension(300, 400));		this.setVisible(true);				JPanel all = new JPanel(new SpringLayout());		all.add(explorer);		all.add(new JPanel(new SpringLayout()).add(id));		all.add(buttons);				SpringUtilities.makeCompactGrid(all, 3,1, 0,0,0,0);				add(all);				pack();	}	@Override	public void actionPerformed(ActionEvent e) {		String cmd = e.getActionCommand();		if(cmd.equals(ok.getActionCommand())){			String inscriptId = id.getText();						String imageCollection = explorer.selectedCollection;			String imageResource = explorer.selectedResource;						ImageUtil.cutImageDueCoordinates(root, imageCollection, imageResource, inscriptId);			//ImageUtil.saveSubimages(root, ImageUtil.cutImageDueCoordinates(root, imageCollection, imageResource, inscriptId));		}		if(cmd.equals(cancel.getActionCommand())){			dispose();		}	}}